<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.websystique.springboot</groupId>
	<artifactId>SpringBootRestApiExample</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<name>SpringBootRestApiExample</name>
	<properties>
		<start-class>org.springframework.boot.App</start-class>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.3.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
		<!-- Additionally, Please make sure that your JAVA_HOME is pointing to 
			1.8 when building on commandline -->
	</properties>

	<dependencies>
		<!-- Add typical dependencies for a web application -->
		<!-- Adds Tomcat and Spring MVC, along others -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
    		<groupId>com.fasterxml.jackson.dataformat</groupId>
    		<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.seasar.cms.s2-classbuilder</groupId>
			<artifactId>s2-classbuilder</artifactId>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin><!-- Include if you want to make an executable jar[FAT JAR which 
					includes all dependencies along with sprinboot loader] that you can run on 
					commandline using java -jar NAME -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>com.microsoft.azure</groupId>
				<artifactId>azure-webapp-maven-plugin</artifactId>
				<version>0.1.3</version>
				<configuration>
					<authentication>
						<serverId>azure-auth</serverId>
					</authentication>
					<resourceGroup>maven-plugin</resourceGroup>
					<appName>maven-linux-app-${maven.build.timestamp}</appName>
					<region>westus</region>
					<containerSettings>
						<imageName>duongdn0912/${project.artifactId}</imageName>
					</containerSettings>
					<appSettings>
						<property>
							<name>PORT</name>
							<value>8080</value>
						</property>
					</appSettings>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<containerSettings>
		<imageName>duongdn0912/${project.artifactId}</imageName>
	</containerSettings>
</project>
